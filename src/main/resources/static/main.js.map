{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/grid/grid.component.ts","./src/app/grid/grid.component.html","./src/app/grid/grid.module.ts","./src/app/grid/grid.service.ts","./src/environments/environment.ts","./src/main.ts","fs (ignored)","crypto (ignored)","stream (ignored)"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import {NgModule} from '@angular/core';\r\nimport {Routes, RouterModule} from '@angular/router';\r\nimport {GridComponent} from \"./grid/grid.component\";\r\n\r\n\r\nconst routes: Routes = [\r\n  {path: '', redirectTo: '/grid', pathMatch: 'full'},\r\n  {path: 'grid', component: GridComponent}\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule {\r\n}\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.less']\r\n})\r\nexport class AppComponent {\r\n  title = 'grid';\r\n}\r\n","<nz-layout>\r\n  <nz-header>\r\n    <span class=\"head\">E大网格画表工具</span>\r\n  </nz-header>\r\n  <nz-content>\r\n    <div class=\"content\">\r\n      <router-outlet></router-outlet>\r\n    </div>\r\n  </nz-content>\r\n</nz-layout>\r\n","import {BrowserModule} from '@angular/platform-browser';\r\nimport {NgModule} from '@angular/core';\r\n\r\nimport {AppRoutingModule} from './app-routing.module';\r\nimport {AppComponent} from './app.component';\r\nimport {FormsModule} from '@angular/forms';\r\nimport {HttpClientModule} from '@angular/common/http';\r\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\r\nimport {NZ_I18N} from 'ng-zorro-antd/i18n';\r\nimport {zh_CN} from 'ng-zorro-antd/i18n';\r\nimport {registerLocaleData} from '@angular/common';\r\nimport zh from '@angular/common/locales/zh';\r\nimport {GridModule} from \"./grid/grid.module\";\r\nimport {NzLayoutModule, NzPageHeaderModule} from \"ng-zorro-antd\";\r\n\r\nregisterLocaleData(zh);\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    FormsModule,\r\n    HttpClientModule,\r\n    BrowserAnimationsModule,\r\n    GridModule,\r\n    NzLayoutModule,\r\n    NzPageHeaderModule,\r\n  ],\r\n  providers: [{provide: NZ_I18N, useValue: zh_CN}],\r\n  bootstrap: [AppComponent],\r\n})\r\nexport class AppModule {\r\n}\r\n","import {Component, ElementRef, OnInit, ViewChild} from '@angular/core';\r\nimport {GridModel, GridService} from './grid.service';\r\nimport * as xlsx from 'xlsx';\r\nimport {stream} from 'xlsx';\r\nimport {stringify} from '@angular/compiler/src/util';\r\n\r\n@Component({\r\n  templateUrl: './grid.component.html',\r\n  selector: 'grid',\r\n  styleUrls: ['./grid.component.less']\r\n})\r\nexport class GridComponent implements OnInit {\r\n  @ViewChild('basicTable', {static: false}) basicTable: ElementRef;\r\n  formatterPercent = (value: number) => `${value} %`;\r\n  parserPercent = (value: string) => value.replace(' %', '');\r\n\r\n  name = '华宝油气';\r\n  currentPrice = 0.455;\r\n  gridMetas: Array<GridMeta> = [{\r\n    name: '%5网格',\r\n    perGrid: 5\r\n  }];\r\n  maxGridPrice = 0.600;\r\n  maxLoss = 40;\r\n  buyAmount = 10000;\r\n  loading = false;\r\n\r\n  // 利润奔跑\r\n  profitRun = false;\r\n  maxProfitRunPrice = 0.700;\r\n  maxProfitRunPercent = 40;\r\n  leftProfitMul = 1;\r\n\r\n  // 逐层加码\r\n  weightMore = false;\r\n  weight = 5;\r\n  weightStart = 2;\r\n\r\n  // 一网打尽\r\n  allInOneGo = false;\r\n  gridNum = 1;\r\n\r\n  grids: Array<Grid> = [];\r\n\r\n  constructor(private gridService: GridService) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  calc() {\r\n    this.loading = true;\r\n    this.grids = this.gridMetas.map(gridMeta => {\r\n      const grid = this.gridService.genGrid({\r\n        currentPrice: this.currentPrice,\r\n        maxGridPrice: this.maxGridPrice,\r\n        perGrid: gridMeta.perGrid,\r\n        maxLoss: this.maxLoss,\r\n        buyAmount: this.buyAmount,\r\n        profitRun: this.profitRun,\r\n        weightMore: this.weightMore,\r\n        weight: this.weight,\r\n        weightStart: this.weightStart,\r\n        allInOneGo: this.allInOneGo,\r\n        maxProfitRunPercent: this.maxProfitRunPercent,\r\n        maxProfitRunPrice: this.maxProfitRunPrice,\r\n        leftProfitMul: this.leftProfitMul,\r\n      });\r\n      return {\r\n        name: gridMeta.name,\r\n        data: grid\r\n      };\r\n    });\r\n\r\n    this.loading = false;\r\n  }\r\n\r\n  exportToExcel() {\r\n    const wb: xlsx.WorkBook = xlsx.utils.book_new();\r\n    this.grids.forEach(grid => {\r\n      const rowData = this.getExcelRowData(grid.data);\r\n      const ws: xlsx.WorkSheet =\r\n        xlsx.utils.json_to_sheet(rowData);\r\n      // 数字格式化 参见https://github.com/rockboom/SheetJS-docs-zh-CN中 默认的数字格式 部分\r\n      Object.keys(ws).forEach(key => {\r\n        // 非标题行才设置数字格式化\r\n        if (!/^[A-Z]+1$|^!.*$/.test(key)) {\r\n          ws[key].z = '0.00';\r\n        }\r\n      });\r\n      // 每列指定宽度\r\n      const col = {width: 20};\r\n      const allCols = [];\r\n      for (let i = 0; i < Object.keys(rowData[0]).length; i++) {\r\n        allCols.push(col);\r\n      }\r\n      ws['!cols'] = allCols;\r\n      xlsx.utils.book_append_sheet(wb, ws, grid.name);\r\n    });\r\n\r\n    xlsx.writeFile(wb, `${this.name}.xlsx`);\r\n  }\r\n\r\n  getExcelRowData(data: Array<GridModel>): any {\r\n    return data.map(value => {\r\n      const res: any = {};\r\n      res['与基准比较'] = value.level;\r\n      res['买入价格'] = value.buyPrice;\r\n      res['买入数量'] = value.buyNum;\r\n      res['买入价格合计'] = value.buyPriceSum;\r\n      res['卖出价格'] = value.sellPrice;\r\n      res['卖出数量'] = value.sellNum;\r\n      res['卖出价格合计'] = value.sellPriceSum;\r\n      if (this.profitRun) {\r\n        res['本期留存数量'] = value.leftNum;\r\n        res['留存卖出价格'] = value.leftProfitSellPrice;\r\n        res['本期留存利润'] = value.leftProfitSum;\r\n      }\r\n      res['盈利'] = value.profit;\r\n      res['盈利百分比'] = value.profitPercentage;\r\n      return res;\r\n    });\r\n  }\r\n\r\n  gridsChange() {\r\n    if (this.gridNum > this.gridMetas.length) {\r\n      const addNum = this.gridNum - this.gridMetas.length;\r\n      for (let i = 0; i < addNum; i++) {\r\n        this.gridMetas.push(this.genOneGridMeta(this.gridMetas.length + 1));\r\n      }\r\n    } else if (this.gridNum < this.gridMetas.length) {\r\n      this.gridMetas = this.gridMetas.splice(0, this.gridNum);\r\n    }\r\n  }\r\n\r\n  genOneGridMeta(index: number): GridMeta {\r\n    return {\r\n      name: `网格${index}`,\r\n      perGrid: 5\r\n    };\r\n  }\r\n}\r\n\r\ninterface Grid {\r\n  name: string;\r\n  data: Array<GridModel>;\r\n}\r\n\r\ninterface GridMeta {\r\n  name: string;\r\n  perGrid: number;\r\n}\r\n","<div class=\"form\">\r\n  <nz-form-item>\r\n    <nz-form-label nzSpan=\"8\">品种名称</nz-form-label>\r\n    <nz-form-control nzSpan=\"4\">\r\n      <input\r\n        nz-input\r\n        [(ngModel)]=\"name\"\r\n        name=\"name\"\r\n      >\r\n    </nz-form-control>\r\n  </nz-form-item>\r\n  <nz-form-item>\r\n    <nz-form-label nzSpan=\"8\">当前价格</nz-form-label>\r\n    <nz-form-control nzSpan=\"4\">\r\n      <nz-input-number [(ngModel)]=\"currentPrice\"></nz-input-number>\r\n    </nz-form-control>\r\n  </nz-form-item>\r\n  <nz-form-item>\r\n    <nz-form-label nzSpan=\"8\">网格买入封顶价格</nz-form-label>\r\n    <nz-form-control nzSpan=\"4\">\r\n      <nz-input-number\r\n        [(ngModel)]=\"maxGridPrice\"></nz-input-number>\r\n    </nz-form-control>\r\n  </nz-form-item>\r\n  <nz-form-item *ngIf=\"!allInOneGo\">\r\n    <nz-form-label nzSpan=\"8\">每格大小</nz-form-label>\r\n    <nz-form-control nzSpan=\"4\">\r\n      <nz-input-number\r\n        [nzFormatter]=\"formatterPercent\"\r\n        [nzParser]=\"parserPercent\"\r\n        [(ngModel)]=\"gridMetas[0].perGrid\"\r\n      ></nz-input-number>\r\n    </nz-form-control>\r\n  </nz-form-item>\r\n  <nz-form-item>\r\n    <nz-form-label nzSpan=\"8\">预计自当前价格的最大跌幅（百分比）</nz-form-label>\r\n    <nz-form-control nzSpan=\"4\">\r\n      <nz-input-number\r\n        [nzFormatter]=\"formatterPercent\"\r\n        [nzParser]=\"parserPercent\"\r\n        [(ngModel)]=\"maxLoss\"\r\n      ></nz-input-number>\r\n    </nz-form-control>\r\n  </nz-form-item>\r\n  <nz-form-item>\r\n    <nz-form-label nzSpan=\"8\">每笔交易金额</nz-form-label>\r\n    <nz-form-control nzSpan=\"4\">\r\n      <nz-input-number\r\n        [(ngModel)]=\"buyAmount\"></nz-input-number>\r\n    </nz-form-control>\r\n  </nz-form-item>\r\n  <nz-divider class=\"divider\" nzText=\"网格2.0对应开关\"></nz-divider>\r\n  <div class=\"checkbox\">\r\n    <label nz-checkbox [(ngModel)]=\"profitRun\">利润奔跑</label>\r\n    <label nz-checkbox [(ngModel)]=\"weightMore\">逐层加码</label>\r\n    <label nz-checkbox [(ngModel)]=\"allInOneGo\">一网打尽</label>\r\n  </div>\r\n\r\n  <nz-divider *ngIf=\"profitRun\" class=\"divider\" nzText=\"利润奔跑配置\"></nz-divider>\r\n  <nz-form-item *ngIf=\"profitRun\">\r\n    <nz-form-label nzSpan=\"8\">利润奔跑封顶价格</nz-form-label>\r\n    <nz-form-control nzSpan=\"4\">\r\n      <nz-input-number [(ngModel)]=\"maxProfitRunPrice\"></nz-input-number>\r\n    </nz-form-control>\r\n  </nz-form-item>\r\n\r\n  <nz-form-item *ngIf=\"profitRun\">\r\n    <nz-form-label nzSpan=\"8\">\r\n      利润奔跑封顶涨幅（百分比）\r\n      <span class=\"tips\" nz-tooltip nzTooltipTitle=\"价格和涨幅有一个满足条件则停止\">\r\n        <i nz-icon\r\n           nzType=\"info-circle\" nzTheme=\"outline\"></i>\r\n      </span>\r\n    </nz-form-label>\r\n    <nz-form-control nzSpan=\"4\">\r\n      <nz-input-number\r\n        [nzFormatter]=\"formatterPercent\"\r\n        [nzParser]=\"parserPercent\"\r\n        [(ngModel)]=\"maxProfitRunPercent\"\r\n      ></nz-input-number>\r\n    </nz-form-control>\r\n  </nz-form-item>\r\n  <nz-form-item *ngIf=\"profitRun\">\r\n    <nz-form-label nzSpan=\"8\">\r\n      留存利润份数\r\n      <span class=\"tips\" nz-tooltip nzTooltipTitle=\"留存多份利润时填写，不写默认为1\">\r\n        <i nz-icon\r\n           nzType=\"info-circle\" nzTheme=\"outline\"></i>\r\n      </span>\r\n    </nz-form-label>\r\n    <nz-form-control nzSpan=\"4\">\r\n      <nz-input-number\r\n        [(ngModel)]=\"leftProfitMul\"\r\n        [nzMin]=\"1\"\r\n      ></nz-input-number>\r\n    </nz-form-control>\r\n  </nz-form-item>\r\n\r\n  <nz-divider *ngIf=\"weightMore\" class=\"divider\" nzText=\"逐层加码配置\"></nz-divider>\r\n  <nz-form-item *ngIf=\"weightMore\">\r\n    <nz-form-label nzSpan=\"8\">每格加码数</nz-form-label>\r\n    <nz-form-control nzSpan=\"4\">\r\n      <nz-input-number [(ngModel)]=\"weight\"></nz-input-number>\r\n    </nz-form-control>\r\n\r\n  </nz-form-item>\r\n\r\n  <nz-form-item *ngIf=\"weightMore\">\r\n    <nz-form-label nzSpan=\"8\">起始加码格</nz-form-label>\r\n    <nz-form-control nzSpan=\"4\">\r\n      <nz-input-number [(ngModel)]=\"weightStart\"></nz-input-number>\r\n    </nz-form-control>\r\n  </nz-form-item>\r\n\r\n  <nz-divider *ngIf=\"allInOneGo\" class=\"divider\" nzText=\"一网打尽配置\"></nz-divider>\r\n  <nz-form-item *ngIf=\"allInOneGo\">\r\n    <nz-form-label nzSpan=\"8\">下网数量</nz-form-label>\r\n    <nz-form-control nzSpan=\"4\">\r\n      <nz-input-number nzMin=\"1\" [(ngModel)]=\"gridNum\" (ngModelChange)=\"gridsChange()\"></nz-input-number>\r\n    </nz-form-control>\r\n  </nz-form-item>\r\n  <div *ngIf=\"allInOneGo\" class=\"all-in-one-go\">\r\n    <nz-space *ngFor=\"let grid of gridMetas\" class=\"all-in-one-go-item\" >\r\n      <nz-space-item>\r\n        <nz-form-item>\r\n          <nz-form-label>网格名称</nz-form-label>\r\n          <nz-form-control>\r\n            <input nz-input [(ngModel)]=\"grid.name\">\r\n          </nz-form-control>\r\n        </nz-form-item>\r\n      </nz-space-item>\r\n      <nz-space-item>\r\n        <nz-form-item>\r\n          <nz-form-label>网格大小(百分比)</nz-form-label>\r\n          <nz-form-control>\r\n            <input nz-input [(ngModel)]=\"grid.perGrid\">\r\n          </nz-form-control>\r\n        </nz-form-item>\r\n      </nz-space-item>\r\n    </nz-space>\r\n  </div>\r\n  <div class=\"buttons\">\r\n    <button class=\"button\" nz-button nzType=\"primary\" (click)=\"calc()\">点击计算</button>\r\n    <button class=\"button\" nz-button nzType=\"primary\" (click)=\"exportToExcel()\">导出至exlce</button>\r\n  </div>\r\n  <nz-spin *ngIf=\"loading\" class=\"spin\" nzSimple></nz-spin>\r\n</div>\r\n\r\n<nz-tabset class=\"grid\">\r\n  <nz-tab *ngFor=\"let grid of grids\" [nzTitle]=\"grid.name\">\r\n\r\n    <nz-table #basicTable\r\n              [nzData]=\"grid.data\"\r\n              class=\"table\"\r\n              [nzShowSizeChanger]=\"true\"\r\n              [nzPageSize]=\"50\"\r\n              [nzPageSizeOptions]=\"[50,100,200]\"\r\n              [nzScroll]=\"{ y: '600px' }\">\r\n      <thead>\r\n      <tr>\r\n        <th>与基准比较</th>\r\n        <th>买入价格</th>\r\n        <th>买入数量</th>\r\n        <th>买入价格合计</th>\r\n        <th>卖出价格</th>\r\n        <th>卖出数量</th>\r\n        <th>卖出价格合计</th>\r\n        <th *ngIf=\"profitRun\">本期留存数量</th>\r\n        <th *ngIf=\"profitRun\">留存卖出价格</th>\r\n        <th *ngIf=\"profitRun\">本期留存利润</th>\r\n        <th>盈利</th>\r\n        <th>盈利百分比</th>\r\n      </tr>\r\n      </thead>\r\n      <tbody>\r\n      <tr *ngFor=\"let row of basicTable.data\">\r\n        <td>{{ row.level    }}</td>\r\n        <td>{{ row.buyPrice | number}}</td>\r\n        <td>{{ row.buyNum | number}}</td>\r\n        <td>{{ row.buyPriceSum | number}}</td>\r\n        <td>{{ row.sellPrice | number}}</td>\r\n        <td>{{ row.sellNum | number}}</td>\r\n        <td>{{ row.sellPriceSum | number}}</td>\r\n        <td *ngIf=\"profitRun\">{{ row.leftNum | number}}</td>\r\n        <td *ngIf=\"profitRun\">{{ row.leftProfitSellPrice | number}}</td>\r\n        <td *ngIf=\"profitRun\">{{ row.leftProfitSum | number }}</td>\r\n        <td>{{ row.profit | number}}</td>\r\n        <td>{{ row.profitPercentage | number}}</td>\r\n      </tr>\r\n      </tbody>\r\n    </nz-table>\r\n  </nz-tab>\r\n</nz-tabset>\r\n\r\n","import {NgModule} from \"@angular/core\";\r\nimport {GridComponent} from \"./grid.component\";\r\nimport {\r\n  NzButtonModule, NzCheckboxModule, NzDividerModule,\r\n  NzFormModule,\r\n  NzIconModule,\r\n  NzInputModule,\r\n  NzInputNumberModule, NzSpinModule,\r\n  NzTableModule, NzTabsModule,\r\n  NzToolTipModule\r\n} from 'ng-zorro-antd';\r\nimport {FormsModule} from \"@angular/forms\";\r\nimport {CommonModule} from \"@angular/common\";\r\nimport {GridService} from \"./grid.service\";\r\nimport {NzSpaceModule} from 'ng-zorro-antd/space';\r\n\r\nconst COMPONENTS = [GridComponent]\r\n\r\n@NgModule({\r\n  imports: [\r\n    NzTableModule,\r\n    NzFormModule,\r\n    NzInputModule,\r\n    NzInputNumberModule,\r\n    NzToolTipModule,\r\n    NzIconModule,\r\n    FormsModule,\r\n    NzButtonModule,\r\n    NzSpinModule,\r\n    CommonModule,\r\n    NzCheckboxModule,\r\n    NzDividerModule,\r\n    NzTabsModule,\r\n    NzSpaceModule,\r\n  ],\r\n  declarations: [...COMPONENTS]\r\n})\r\nexport class GridModule {\r\n\r\n}\r\n","import {Injectable} from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class GridService {\r\n\r\n  constructor() {\r\n  }\r\n\r\n  public genGrid(gridConfig: GridConfig): Array<GridModel> {\r\n    let res: Array<GridModel> = [];\r\n    // res.push(...this.genPricesGtCurrentPrice(gridConfig));\r\n    res.push(...this.genPricesLteCurrentPrice(gridConfig));\r\n    res.sort((o1, o2) => o1.level - o2.level);\r\n    if (gridConfig.profitRun) {\r\n      res = res.map(grid => this.profitRun(grid, gridConfig));\r\n    }\r\n    res.push(this.genSum(res));\r\n    return res;\r\n  }\r\n\r\n  /**\r\n   * 生成小于等于当前价格的网格\r\n   *\r\n   * @return\r\n   */\r\n  private genPricesLteCurrentPrice(gridConfig: GridConfig): Array<GridModel> {\r\n    const gridModels: Array<GridModel> = [];\r\n    const grids = gridConfig.maxLoss / gridConfig.perGrid;\r\n    for (let i = 0; i < grids; i++) {\r\n      const gridBuyLevel = 1.0 - gridConfig.perGrid * i / 100;\r\n      const gridSellLevel = 1.0 - gridConfig.perGrid * (i - 1) / 100;\r\n      const buyPrice = gridConfig.currentPrice * gridBuyLevel;\r\n      const sellPrice = gridConfig.currentPrice * gridSellLevel;\r\n      gridModels.push(this.createOneGrid(buyPrice, sellPrice, gridBuyLevel, gridConfig));\r\n    }\r\n    gridModels[0].benchmark = true;\r\n    return gridModels;\r\n  }\r\n\r\n  /**\r\n   * 生成合计栏\r\n   *\r\n   * @param gridModels\r\n   * @return\r\n   */\r\n  private genSum(gridModels: Array<GridModel>): GridModel {\r\n    const gridModel: GridModel = {\r\n      level: '合计',\r\n      buyNum: gridModels.map(model => model.buyNum).reduce(((previousValue, currentValue) => previousValue + currentValue)),\r\n      buyPriceSum: gridModels.map(model => model.buyPriceSum).reduce(((previousValue, currentValue) => previousValue + currentValue)),\r\n      sellPriceSum: gridModels.map(model => model.sellPriceSum).reduce(((previousValue, currentValue) => previousValue + currentValue)),\r\n      sellNum: gridModels.map(model => model.sellNum).reduce(((previousValue, currentValue) => previousValue + currentValue)),\r\n      profit: gridModels.map(model => model.profit).reduce(((previousValue, currentValue) => previousValue + currentValue)),\r\n      leftProfitSum: gridModels.map(model => model.leftProfitSum).reduce(((previousValue, currentValue) => previousValue + currentValue)),\r\n    };\r\n    gridModel.profitPercentage = gridModel.profit / gridModel.buyPriceSum * 100;\r\n    return gridModel;\r\n  }\r\n\r\n  private profitRun({...grid}: GridModel, gridConfig: GridConfig): GridModel {\r\n    const leftNum = this.calLeftProfitNum(grid.buyPrice, grid.sellPrice, gridConfig, grid.buyNum);\r\n    grid.leftNum = leftNum;\r\n    grid.sellNum = grid.buyNum - leftNum;\r\n    grid.sellPriceSum = grid.sellPrice * grid.sellNum;\r\n    grid.leftProfitSellPrice = this.calLeftProfitSellPrice(grid.sellPrice, gridConfig);\r\n    grid.leftProfitSum = grid.leftNum * grid.leftProfitSellPrice;\r\n    grid.profit = leftNum * grid.leftProfitSellPrice + grid.sellPrice * grid.sellNum - grid.buyPriceSum;\r\n    grid.profitPercentage = grid.profit / grid.buyPriceSum * 100;\r\n    return grid;\r\n  }\r\n\r\n  /**\r\n   * 留利润数量\r\n   * @return\r\n   */\r\n  private calLeftProfitNum(buyPrice: number, sellPrice: number, gridConfig: GridConfig, buyNum: number): number {\r\n    const spread = sellPrice - buyPrice;\r\n    const profit = spread * buyNum;\r\n    return parseInt((profit / sellPrice).toFixed(0), 10) * gridConfig.leftProfitMul;\r\n  }\r\n\r\n  /**\r\n   * 获取保留利润的出售价格\r\n   */\r\n  private calLeftProfitSellPrice(sellPrice: number, gridConfig: GridConfig): number {\r\n    console.log(gridConfig);\r\n    const leftSellPrice = sellPrice * (100 + gridConfig.maxProfitRunPercent) / 100;\r\n    return Math.min(leftSellPrice, gridConfig.maxProfitRunPrice);\r\n  }\r\n\r\n  private createOneGrid(buyPrice: number, sellPrice, buyLevel, gridConfig: GridConfig) {\r\n    const buyNum: number = this.genBuyNum(buyLevel, buyPrice, gridConfig);\r\n    const gridModel: GridModel = {\r\n      level: buyLevel,\r\n      buyPrice,\r\n      buyNum,\r\n      buyPriceSum: buyPrice * buyNum,\r\n      sellPrice,\r\n      sellNum: buyNum,\r\n      sellPriceSum: buyNum * sellPrice,\r\n    };\r\n    gridModel.profit = gridModel.sellPriceSum - gridModel.buyPriceSum;\r\n    // gridModel.profitPercentage = (gridModel.profit / (gridModel.buyNum * gridConfig.currentPrice)) * 100;\r\n    return gridModel;\r\n  }\r\n\r\n  private genBuyNum(buyLevel: number, buyPrice: number, gridConfig: GridConfig): number {\r\n    let buyNum: number = Math.floor(gridConfig.buyAmount / buyPrice);\r\n    if (gridConfig.weightMore) {\r\n      const currentLevel = Math.floor((1 - buyLevel) * 100 / gridConfig.perGrid);\r\n      if (currentLevel >= gridConfig.weightStart) {\r\n        const extraBuyNum = Math.floor(buyNum * (currentLevel - gridConfig.weightStart + 1) * gridConfig.weight / 100);\r\n        buyNum += extraBuyNum;\r\n      }\r\n    }\r\n    return buyNum;\r\n  }\r\n}\r\n\r\nexport interface GridModel {\r\n  level?: any;\r\n  buyPrice?: number;\r\n  buyNum?: number;\r\n  buyPriceSum?: number;\r\n  sellPrice?: number;\r\n  sellNum?: number;\r\n  sellPriceSum?: number;\r\n  profit?: number;\r\n  profitPercentage?: number;\r\n  leftNum?: number;\r\n  leftProfitSellPrice?: number;\r\n  leftProfitSum?: number;\r\n  benchmark?: boolean;\r\n}\r\n\r\nexport interface GridConfig {\r\n  currentPrice?: number;\r\n  maxProfitRunPrice?: number;\r\n  maxProfitRunPercent?: number;\r\n  maxGridPrice?: number;\r\n  perGrid?: number;\r\n  maxLoss?: number;\r\n  buyAmount?: number;\r\n  leftProfitMul?: number,\r\n  // 利润奔跑\r\n  profitRun: boolean;\r\n  // 逐层加码\r\n  weightMore: boolean;\r\n  // 一网打尽\r\n  allInOneGo: boolean;\r\n\r\n  [propName: string]: any;\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","/* (ignored) */","/* (ignored) */","/* (ignored) */"],"sourceRoot":"webpack:///"}